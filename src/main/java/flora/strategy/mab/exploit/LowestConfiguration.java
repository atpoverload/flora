package flora.strategy.mab.exploit;

import static java.util.Comparator.comparing;

import flora.strategy.mab.ExploitationPolicy;
import flora.strategy.mab.MultiArmedBandit;

/** An {@link ExploitationPolicy} that selects the configuration with the lowest average reward. */
public final class LowestConfiguration implements ExploitationPolicy {
  private static final LowestConfiguration instance = new LowestConfiguration();

  public static LowestConfiguration instance() {
    return instance;
  }

  /** Returns the config with smallest average reward. */
  @Override
  public <K, C, MAB extends MultiArmedBandit<K, C, MAB>> MAB exploit(MAB bandit) {
    C configuration =
        bandit.rewardedConfigurations().stream()
            .min(comparing(k -> bandit.averageReward(k)))
            .orElseThrow(
                () -> new IllegalStateException("Exploitation was requested with no evaluations."));
    return bandit.withConfiguration(configuration);
  }

  private LowestConfiguration() {}
}
