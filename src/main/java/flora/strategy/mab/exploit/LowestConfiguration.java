package flora.strategy.mab.exploit;

import static java.util.Comparator.comparing;

import flora.Knob;
import flora.strategy.mab.ExploitationPolicy;
import flora.strategy.mab.MultiArmedBanditContext;
import java.util.Map;

/** An {@link ExploitationPolicy} that selects the configuration with the lowest average reward. */
public final class LowestConfiguration implements ExploitationPolicy {
  private static final LowestConfiguration instance = new LowestConfiguration();

  public static LowestConfiguration getPolicy() {
    return instance;
  }

  /** Returns the config with smallest average reward. */
  @Override
  public Map<String, Knob> exploit(MultiArmedBanditContext context) {
    return context.getConfigurations().stream()
        .min(comparing(k -> context.getAverageReward(k)))
        .orElseThrow(
            () -> new IllegalStateException("Exploitation was requested with no evaluations."));
  }

  private LowestConfiguration() {}
}
