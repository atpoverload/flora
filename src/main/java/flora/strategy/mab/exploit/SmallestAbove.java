package flora.strategy.mab.exploit;

import static java.util.Comparator.comparing;

import flora.strategy.mab.ExploitationPolicy;
import flora.strategy.mab.MultiArmedBandit;

/** An {@link ExploitationPolicy} for the smallest average reward above a value. */
public final class SmallestAbove implements ExploitationPolicy {
  private final double value;

  public SmallestAbove(double value) {
    this.value = value;
  }

  /** Returns the config with smallest average reward above {@code value}. */
  @Override
  public <K, C, KC extends MultiArmedBandit<K, C, KC>> KC exploit(KC bandit) {
    C configuration =
        bandit.rewardedConfigurations().stream()
            .filter(k -> bandit.averageReward(k) < value)
            .min(comparing(k -> Math.abs(bandit.averageReward(k))))
            .orElseThrow(
                () -> new IllegalStateException("Exploitation was requested with no evaluations."));
    return bandit.setConfiguration(configuration);
  }
}
