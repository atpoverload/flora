package flora.strategy.mab.exploit;

import static java.util.Comparator.comparing;

import flora.Knob;
import flora.strategy.mab.ExploitationPolicy;
import flora.strategy.mab.MultiArmedBanditContext;
import java.util.Map;

/**
 * An {@link ExploitationPolicy} that selects the configuration with a reward nearest to the mean.
 */
public final class NearestToMean implements ExploitationPolicy {
  private static final NearestToMean instance = new NearestToMean();

  public static NearestToMean getPolicy() {
    return instance;
  }

  /** Returns the config with average reward closest to the total's mean. */
  @Override
  public Map<String, Knob> exploit(MultiArmedBanditContext context) {
    double mean = context.getTotalReward() / context.getTotalRewardCount();
    return context.getConfigurations().stream()
        .min(comparing(k -> Math.abs(context.getAverageReward(k) - mean)))
        .orElseThrow(
            () -> new IllegalStateException("Exploitation was requested with no evaluations."));
  }
}
