package flora.strategy.mab.exploit;

import static java.util.Comparator.comparing;

import flora.strategy.mab.ExploitationPolicy;
import flora.strategy.mab.MultiArmedBandit;

/** An {@link ExploitationPolicy} for the average reward nearest to the total mean. */
public final class NearestToMean implements ExploitationPolicy {
  private static final NearestToMean instance = new NearestToMean();

  public static NearestToMean instance() {
    return instance;
  }

  /** Returns the config with average reward closest to the total's mean. */
  @Override
  public <K, C, MAB extends MultiArmedBandit<K, C, MAB>> MAB exploit(MAB bandit) {
    double mean = bandit.totalReward() / bandit.totalCount();
    C configuration =
        bandit.rewardedConfigurations().stream()
            .min(comparing(k -> Math.abs(bandit.averageReward(k) - mean)))
            .orElseThrow(
                () -> new IllegalStateException("Exploitation was requested with no evaluations."));
    return bandit.withConfiguration(configuration);
  }

  private NearestToMean() {}
}
