package flora.strategy.mab.exploit;

import static java.util.Comparator.comparing;

import flora.strategy.mab.ExploitationPolicy;
import flora.strategy.mab.MultiArmedBandit;

/** An {@link ExploitationPolicy} that for the largest reward smaller than a value. */
public final class LargestBelow implements ExploitationPolicy {
  private final double value;

  public LargestBelow(double value) {
    this.value = value;
  }

  /** Returns the config with largest average reward below {@code value}. */
  @Override
  public <K, C, MAB extends MultiArmedBandit<K, C, MAB>> MAB exploit(MAB bandit) {
    C configuration =
        bandit.rewardedConfigurations().stream()
            .filter(k -> bandit.averageReward(k) > value)
            .max(comparing(k -> Math.abs(bandit.averageReward(k))))
            .orElseThrow(
                () -> new IllegalStateException("Exploitation was requested with no evaluations."));
    return bandit.withConfiguration(configuration);
  }
}
